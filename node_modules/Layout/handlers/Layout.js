var NE = require('nuby-express');
var util = require('util');
var _DEBUG = false;
var Gate = NE.deps.support.Gate;
var Layout = require('./../index');

module.exports = function () {

    return  new NE.Path_Handler({
        name:'layout_dir_layout_handler',
        type:'dir',
        re:/(.*)/,
        execute:function (props, callback) {
            var frame = props.frame;
            if (_DEBUG)   console.log(' @@@@@@@@@@@@@@@ making layout over %s FOR FRAME %s', props.full_path, frame.path);

            //@TODO -- big thing -- delegate the static loading of layout resources

            var layout_res = new Layout({
                path:props.full_path
            });
            if (_DEBUG)   console.log('adding layout %s', util.inspect(layout_res, true, 0));
            layout_res.start_load(function () {
                var root = layout_res.path.substr(frame.path.length) + '/public';
                var prefix;
              //  if (_DEBUG) console.log('>>> public static layout = %s', util.inspect(layout_res, false, 2));
                if (layout_res.config.static_prefix) {
                    prefix = layout_res.config.static_prefix;
                } else {
                    prefix = '';
                }
                // the static path is added as a seperate resource to the frame
                var data = {
                    type:'static_route',
                    name:'layout_' + layout_res.name + '_static_route',
                    prefix:prefix,
                    root:root};
                if (_DEBUG) console.log(' >>>>>>>>>> adding LAYOUT static path for %s to >>>>>>>> %s(%s)', root, frame.id(), frame.path);
                frame.add_resource(data);
                if (_DEBUG) console.log(' >>>>>>>>>> adding LAYOUT  %s to >>>>>>>> %s(%s)', props.full_path, frame.id(), frame.path);

                frame.add_resource(layout_res);
                callback();
            }, props.full_path, frame);
            //  callback();
        }
    });
}